services:
  backend:
    build: backend
    image: "${DH_USERNAME}/backend:${TAG}"   
    ports:
      - "8000:8000"
      - "54321:54321"
    environment:
      - MLFLOW_TRACKING_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/app/backend/mlruns
    volumes:
      - ./backend:/app/backend
    depends_on:
      - mlflow
    networks:
      - project_network

  frontend:
    build: frontend
    image: "${DH_USERNAME}/frontend:${TAG}"
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app/frontend
    environment:
      - BACKEND_HOST=http://backend:8000
      - MLFLOW_TRACKING_URI=http://mlflow:5001
    depends_on: 
      - backend
    networks:
      - project_network

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    image: "${DH_USERNAME}/mlflow:${TAG}"
    ports:
      - "5001:5001"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/app/backend/mlruns
      - BACKEND_HOST=http://backend:8000
    volumes:
      - ./backend/mlruns:/app/backend/mlruns
    depends_on:
      - postgres
    networks:
      - project_network

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=mlflow
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - project_network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
  
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    environment:
      - ADMIN_PASSWORD=123456789Abcd
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - project_network

volumes:
  portainer_data:
  postgres_data:

networks:
  project_network:
    driver: bridge