name: CI-CD Docker

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Debug – afficher le PATH
        run: |
          echo "PATH = $PATH"
          which docker || echo "docker non trouvé dans le PATH"

      - name: Connexion à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}

      - name: Définir le tag d’image
        id: vars
        run: echo "TAG=${GITHUB_SHA::8}" >> "$GITHUB_OUTPUT"

      - name: Build & Push image backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DH_USERNAME }}/tp-final-a57-backend:${{ steps.vars.outputs.TAG }}

      - name: Build & Push image frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DH_USERNAME }}/tp-final-a57-frontend:${{ steps.vars.outputs.TAG }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted   # ou ubuntu-latest si vous utilisez SSH

    steps:
      # Si vous déployez sur le même runner :
      - name: Checkout du code (pour utiliser github.workspace)
        uses: actions/checkout@v4

      - name: Déploiement local avec docker-compose
        run: |
          cd "${{ github.workspace }}"
          export DH_USERNAME=${{ secrets.DH_USERNAME }}
          export TAG=${{ steps.vars.outputs.TAG }}
          docker-compose pull
          docker-compose up -d

      # OU, si vous déployez sur un serveur distant, commentez les lignes précédentes et utilisez :
      # - name: Déploiement sur le serveur via SSH
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.PROD_HOST }}
      #     username: ${{ secrets.PROD_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       cd /home/eleve/tp-final-a57
      #       export DH_USERNAME=${{ secrets.DH_USERNAME }}
      #       export TAG=${{ steps.vars.outputs.TAG }}
      #       docker-compose pull
      #       docker-compose up -d

  notify:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.bell.net
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ✅ CI/CD terminé avec succès
          to: 2446546@bdeb.qc.ca
          from: GitHub Actions <2446546@bdeb.qc.ca>
          body: |
            Le workflow CI/CD dans le dépôt tp-final-a57 s'est exécuté avec succès !
